include "transport.fbs";
include "webRtcTransport.fbs";
include "plainTransport.fbs";
include "directTransport.fbs";
include "producer.fbs";
include "dataProducer.fbs";
include "dataConsumer.fbs";
include "activeSpeakerObserver.fbs";
include "audioLevelObserver.fbs";

namespace FBS.Notification;

enum Event: uint8 {
  // Notifications to worker.
  TRANSPORT_SEND_RTCP = 0,
  PRODUCER_SEND,
  DATA_PRODUCER_SEND,
  // Notifications from worker.
  WORKER_RUNNING,
  TRANSPORT_SCTP_STATE_CHANGE,
  TRANSPORT_TRACE,
  WEBRTCTRANSPORT_ICE_SELECTED_TUPLE_CHANGE,
  WEBRTCTRANSPORT_ICE_STATE_CHANGE,
  WEBRTCTRANSPORT_DTLS_STATE_CHANGE,
  PLAINTRANSPORT_TUPLE,
  PLAINTRANSPORT_RTCP_TUPLE,
  DIRECTTRANSPORT_RTCP,
  PRODUCER_SCORE,
  PRODUCER_TRACE,
  PRODUCER_VIDEO_ORIENTATION_CHANGE,
  CONSUMER_PRODUCER_PAUSE,
  CONSUMER_PRODUCER_RESUME,
  CONSUMER_PRODUCER_CLOSE,
  CONSUMER_LAYERS_CHANGE,
  CONSUMER_RTP,
  CONSUMER_SCORE,
  CONSUMER_TRACE,
  DATACONSUMER_BUFFERED_AMOUNT_LOW,
  DATACONSUMER_SCTP_SENDBUFFER_FULL,
  DATACONSUMER_DATAPRODUCER_CLOSE,
  DATACONSUMER_MESSAGE,
  ACTIVESPEAKEROBSERVER_DOMINANT_SPEAKER,
  AUDIOLEVELOBSERVER_SILENCE,
  AUDIOLEVELOBSERVER_VOLUMES,
}

union Body {
  // Notifications to worker.
  FBS.Transport.SendRtcpNotification,
  FBS.Transport.SctpStateChangeNotification,
  FBS.Producer.SendNotification,
  FBS.DataProducer.SendNotification,
  // Notifications from worker.
  FBS.Transport.TraceNotification,
  FBS.WebRtcTransport.IceSelectedTupleChangeNotification,
  FBS.WebRtcTransport.IceStateChangeNotification,
  FBS.WebRtcTransport.DtlsStateChangeNotification,
  FBS.PlainTransport.TupleNotification,
  FBS.PlainTransport.RtcpTupleNotification,
  FBS.DirectTransport.RtcpNotification,
  FBS.Producer.ScoreNotification,
  FBS.Producer.TraceNotification,
  FBS.Producer.VideoOrientationChangeNotification,
  FBS.Consumer.LayersChangeNotification,
  FBS.Consumer.RtpNotification,
  FBS.Consumer.ScoreNotification,
  FBS.Consumer.TraceNotification,
  FBS.DataConsumer.MessageNotification,
  FBS.DataConsumer.BufferedAmountLowNotification,
  FBS.ActiveSpeakerObserver.DominantSpeakerNotification,
  FBS.AudioLevelObserver.VolumesNotification,
}

table Notification {
  handler_id:string;
  event:Event;
  body:Body;
}
