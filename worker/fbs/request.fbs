include "worker.fbs";
include "router.fbs";
include "transport.fbs";
include "producer.fbs";
include "consumer.fbs";
include "dataConsumer.fbs";
include "rtpObserver.fbs";

namespace FBS.Request;

enum Method: uint8 {
  WORKER_CLOSE = 0,
  WORKER_DUMP,
  WORKER_GET_RESOURCE_USAGE,
  WORKER_UPDATE_SETTINGS,
  WORKER_CREATE_WEBRTCSERVER,
  WORKER_CREATE_ROUTER,
  WORKER_WEBRTCSERVER_CLOSE,
  WORKER_CLOSE_ROUTER,
  WEBRTCSERVER_DUMP,
  ROUTER_DUMP,
  ROUTER_CREATE_WEBRTCTRANSPORT,
  ROUTER_CREATE_WEBRTCTRANSPORT_WITH_SERVER,
  ROUTER_CREATE_PLAINTRANSPORT,
  ROUTER_CREATE_PIPETRANSPORT,
  ROUTER_CREATE_DIRECTTRANSPORT,
  ROUTER_CLOSE_TRANSPORT,
  ROUTER_CREATE_ACTIVESPEAKEROBSERVER,
  ROUTER_CREATE_AUDIOLEVELOBSERVER,
  ROUTER_CLOSE_RTPOBSERVER,
  TRANSPORT_DUMP,
  TRANSPORT_GET_STATS,
  TRANSPORT_CONNECT,
  TRANSPORT_SET_MAX_INCOMING_BITRATE,
  TRANSPORT_SET_MAX_OUTGOING_BITRATE,
  TRANSPORT_SET_MIN_OUTGOING_BITRATE,
  TRANSPORT_RESTART_ICE,
  TRANSPORT_PRODUCE,
  TRANSPORT_PRODUCE_DATA,
  TRANSPORT_CONSUME,
  TRANSPORT_CONSUME_DATA,
  TRANSPORT_ENABLE_TRACE_EVENT,
  TRANSPORT_CLOSE_PRODUCER,
  TRANSPORT_CLOSE_CONSUMER,
  TRANSPORT_CLOSE_DATAPRODUCER,
  TRANSPORT_CLOSE_DATACONSUMER,
  PLAINTRANSPORT_CONNECT,
  PIPETRANSPORT_CONNECT,
  WEBRTCTRANSPORT_CONNECT,
  PRODUCER_DUMP,
  PRODUCER_GET_STATS,
  PRODUCER_PAUSE,
  PRODUCER_RESUME,
  PRODUCER_ENABLE_TRACE_EVENT,
  CONSUMER_DUMP,
  CONSUMER_GET_STATS,
  CONSUMER_PAUSE,
  CONSUMER_RESUME,
  CONSUMER_SET_PREFERRED_LAYERS,
  CONSUMER_SET_PRIORITY,
  CONSUMER_REQUEST_KEY_FRAME,
  CONSUMER_ENABLE_TRACE_EVENT,
  DATAPRODUCER_DUMP,
  DATAPRODUCER_GET_STATS,
  DATAPRODUCER_PAUSE,
  DATAPRODUCER_RESUME,
  DATACONSUMER_DUMP,
  DATACONSUMER_GET_STATS,
  DATACONSUMER_PAUSE,
  DATACONSUMER_RESUME,
  DATACONSUMER_GET_BUFFERED_AMOUNT,
  DATACONSUMER_SET_BUFFERED_AMOUNT_LOW_THRESHOLD,
  DATACONSUMER_SEND,
  DATACONSUMER_SET_SUBCHANNELS,
  RTPOBSERVER_PAUSE,
  RTPOBSERVER_RESUME,
  RTPOBSERVER_ADD_PRODUCER,
  RTPOBSERVER_REMOVE_PRODUCER,
}

union Body {
  FBS.Worker.UpdateSettingsRequest,
  FBS.Worker.CreateWebRtcServerRequest,
  FBS.Worker.CloseWebRtcServerRequest,
  FBS.Worker.CreateRouterRequest,
  FBS.Worker.CloseRouterRequest,
  FBS.Router.CreateWebRtcTransportRequest,
  FBS.Router.CreatePlainTransportRequest,
  FBS.Router.CreatePipeTransportRequest,
  FBS.Router.CreateDirectTransportRequest,
  FBS.Router.CreateActiveSpeakerObserverRequest,
  FBS.Router.CreateAudioLevelObserverRequest,
  FBS.Router.CloseTransportRequest,
  FBS.Router.CloseRtpObserverRequest,
  FBS.Transport.SetMaxIncomingBitrateRequest,
  FBS.Transport.SetMaxOutgoingBitrateRequest,
  FBS.Transport.SetMinOutgoingBitrateRequest,
  FBS.Transport.ProduceRequest,
  FBS.Transport.ConsumeRequest,
  FBS.Transport.ProduceDataRequest,
  FBS.Transport.ConsumeDataRequest,
  Transport_EnableTraceEventRequest: FBS.Transport.EnableTraceEventRequest,
  FBS.Transport.CloseProducerRequest,
  FBS.Transport.CloseConsumerRequest,
  FBS.Transport.CloseDataProducerRequest,
  FBS.Transport.CloseDataConsumerRequest,
  PlainTransport_ConnectRequest: FBS.PlainTransport.ConnectRequest,
  PipeTransport_ConnectRequest: FBS.PipeTransport.ConnectRequest,
  WebRtcTransport_ConnectRequest: FBS.WebRtcTransport.ConnectRequest,
  Producer_EnableTraceEventRequest: FBS.Producer.EnableTraceEventRequest,
  FBS.Consumer.SetPreferredLayersRequest,
  FBS.Consumer.SetPriorityRequest,
  Consumer_EnableTraceEventRequest: FBS.Consumer.EnableTraceEventRequest,
  FBS.DataConsumer.SetBufferedAmountLowThresholdRequest,
  FBS.DataConsumer.SendRequest,
  FBS.DataConsumer.SetSubchannelsRequest,
  FBS.RtpObserver.AddProducerRequest,
  FBS.RtpObserver.RemoveProducerRequest,
}

table Request {
  id:uint32;
  method:Method;
  handler_id:string (required);
  body:Body;
}

root_type Request;
