
namespace FBS.RtpParameters;

enum MediaKind : uint8 { ALL = 0, AUDIO, VIDEO }
enum Type: uint8 { NONE = 0, SIMPLE, SIMULCAST, SVC, PIPE }

// Boolean is a uint8/byte type.
table Boolean {
  value:uint8;
}

table Integer {
  value:int32;
}

table IntegerArray {
  value:[int32];
}

table Double {
  value:double;
}

table String {
  value:string;
}

union Value {
  Boolean,
  Integer,
  Double,
  String,
  IntegerArray,
}

table Parameter {
  name: string (required);
  value: Value;
}

table RtcpFeedback {
  type:string (required);
  parameter:string;
}

table RtpCodecParameters {
  mime_type:string (required);
  payload_type:uint8;
  clock_rate:uint32;
  channels:uint8 = null;
  parameters:[Parameter];
  rtcp_feedback:[RtcpFeedback];
}

table RtpHeaderExtensionParameters {
  uri:string (required);
  id:uint8;
  encrypt:bool = false;
  parameters:[Parameter];
}

table Rtx {
  ssrc:uint32;
}

table RtpEncodingParameters {
  ssrc:uint32 = null;
  rid:string;
  codec_payload_type:uint8 = null;
  rtx:Rtx;
  dtx:bool = false;
  scalability_mode:string;
  max_bitrate:uint32 = null;
}

table RtcpParameters {
  cname:string;
  reduced_size:bool = true;
}

table RtpParameters {
  mid:string;
  codecs:[RtpCodecParameters] (required);
  header_extensions:[RtpHeaderExtensionParameters];
  encodings:[RtpEncodingParameters];
  rtcp:RtcpParameters;
}

table CodecMapping {
  payload_type:uint8;
  mapped_payload_type:uint8;
}

table EncodingMapping {
  rid:string;
  ssrc:uint32 = null;
  scalability_mode:string;
  mapped_ssrc:uint32;
}

table RtpMapping {
  codecs:[CodecMapping] (required);
  encodings:[EncodingMapping] (required);
}
