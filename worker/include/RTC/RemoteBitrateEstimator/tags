!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AdaptiveThresholdExperimentIsDisabled	OveruseDetector.hpp	/^bool AdaptiveThresholdExperimentIsDisabled();$/;"	p	namespace:RTC	signature:()
AddCluster	RemoteBitrateEstimatorAbsSendTime.hpp	/^  static void AddCluster(std::list<Cluster>* clusters, Cluster* cluster);$/;"	p	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private	signature:(std::list<Cluster>* clusters, Cluster* cluster)
AdditiveRateIncrease	AimdRateControl.hpp	/^  uint32_t AdditiveRateIncrease(int64_t now_ms, int64_t last_ms) const;$/;"	p	class:RTC::AimdRateControl	access:private	signature:(int64_t now_ms, int64_t last_ms) const
AimdRateControl	AimdRateControl.hpp	/^  AimdRateControl();$/;"	p	class:RTC::AimdRateControl	access:public	signature:()
AimdRateControl	AimdRateControl.hpp	/^class AimdRateControl {$/;"	c	namespace:RTC
BWE_MAX	BweDefines.hpp	/^#define BWE_MAX(/;"	d
BWE_MIN	BweDefines.hpp	/^#define BWE_MIN(/;"	d
BandwidthUsage	BweDefines.hpp	/^enum BandwidthUsage {$/;"	g	namespace:RTC
BelongsToBurst	InterArrival.hpp	/^  bool BelongsToBurst(int64_t arrival_time_ms, uint32_t timestamp) const;$/;"	p	class:RTC::InterArrival	access:private	signature:(int64_t arrival_time_ms, uint32_t timestamp) const
BweNames	BweDefines.hpp	/^enum BweNames {$/;"	g	namespace:RTC
ChangeBitrate	AimdRateControl.hpp	/^  uint32_t ChangeBitrate(uint32_t current_bitrate,$/;"	p	class:RTC::AimdRateControl	access:private	signature:(uint32_t current_bitrate, uint32_t incoming_bitrate, int64_t now_ms)
ChangeRegion	AimdRateControl.hpp	/^  void ChangeRegion(RateControlRegion region);$/;"	p	class:RTC::AimdRateControl	access:private	signature:(RateControlRegion region)
ChangeState	AimdRateControl.hpp	/^  void ChangeState(RateControlState new_state);$/;"	p	class:RTC::AimdRateControl	access:private	signature:(RateControlState new_state)
ChangeState	AimdRateControl.hpp	/^  void ChangeState(const RateControlInput& input, int64_t now_ms);$/;"	p	class:RTC::AimdRateControl	access:private	signature:(const RateControlInput& input, int64_t now_ms)
ClampBitrate	AimdRateControl.hpp	/^  uint32_t ClampBitrate(uint32_t new_bitrate_bps,$/;"	p	class:RTC::AimdRateControl	access:private	signature:(uint32_t new_bitrate_bps, uint32_t incoming_bitrate_bps) const
Cluster	RemoteBitrateEstimatorAbsSendTime.hpp	/^  Cluster()$/;"	f	struct:RTC::Cluster	access:public	signature:()
Cluster	RemoteBitrateEstimatorAbsSendTime.hpp	/^struct Cluster {$/;"	s	namespace:RTC
ComputeClusters	RemoteBitrateEstimatorAbsSendTime.hpp	/^  void ComputeClusters(std::list<Cluster>* clusters) const;$/;"	p	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private	signature:(std::list<Cluster>* clusters) const
ComputeDeltas	InterArrival.hpp	/^  bool ComputeDeltas(uint32_t timestamp,$/;"	p	class:RTC::InterArrival	access:public	signature:(uint32_t timestamp, int64_t arrival_time_ms, int64_t system_time_ms, size_t packet_size, uint32_t* timestamp_delta, int64_t* arrival_time_delta_ms, int* packet_size_delta)
Detect	OveruseDetector.hpp	/^  BandwidthUsage Detect(double offset,$/;"	p	class:RTC::OveruseDetector	access:public	signature:(double offset, double timestamp_delta, int num_of_deltas, int64_t now_ms)
E_	OveruseEstimator.hpp	/^  double E_[2][2];$/;"	m	class:RTC::OveruseEstimator	access:private
FindBestProbe	RemoteBitrateEstimatorAbsSendTime.hpp	/^  std::list<Cluster>::const_iterator FindBestProbe($/;"	p	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private	signature:( const std::list<Cluster>& clusters) const
GetFeedbackInterval	AimdRateControl.hpp	/^  int64_t GetFeedbackInterval() const;$/;"	p	class:RTC::AimdRateControl	access:public	signature:() const
GetLastBitrateDecreaseBps	AimdRateControl.hpp	/^  virtual int GetLastBitrateDecreaseBps() const;$/;"	p	class:RTC::AimdRateControl	access:public	signature:() const
GetMinBitrateBps	BweDefines.hpp	/^int GetMinBitrateBps();$/;"	p	namespace:RTC::congestion_controller	signature:()
GetNearMaxIncreaseRateBps	AimdRateControl.hpp	/^  virtual int GetNearMaxIncreaseRateBps() const;$/;"	p	class:RTC::AimdRateControl	access:public	signature:() const
GetRecvBitrateBps	RemoteBitrateEstimatorAbsSendTime.hpp	/^  int GetRecvBitrateBps() const {$/;"	f	struct:RTC::Cluster	access:public	signature:() const
GetRemoteRate	RemoteBitrateEstimatorSingleStream.hpp	/^  AimdRateControl* GetRemoteRate();$/;"	p	class:RTC::RemoteBitrateEstimatorSingleStream	access:private	signature:()
GetSendBitrateBps	RemoteBitrateEstimatorAbsSendTime.hpp	/^  int GetSendBitrateBps() const {$/;"	f	struct:RTC::Cluster	access:public	signature:() const
GetSsrcs	RemoteBitrateEstimatorSingleStream.hpp	/^  void GetSsrcs(std::vector<uint32_t>* ssrcs) const;$/;"	p	class:RTC::RemoteBitrateEstimatorSingleStream	access:private	signature:(std::vector<uint32_t>* ssrcs) const
GetStats	RemoteBitrateEstimator.hpp	/^  virtual bool GetStats(ReceiveBandwidthEstimatorStats* output) const {$/;"	f	class:RTC::RemoteBitrateEstimator	access:public	signature:(ReceiveBandwidthEstimatorStats* output) const
IncomingPacket	RemoteBitrateEstimator.hpp	/^  virtual void IncomingPacket(int64_t arrival_time_ms,$/;"	p	class:RTC::RemoteBitrateEstimator	access:public	signature:(int64_t arrival_time_ms, size_t payload_size, const RTPHeader& header)
IncomingPacketFeedbackVector	RemoteBitrateEstimator.hpp	/^  virtual void IncomingPacketFeedbackVector($/;"	f	class:RTC::RemoteBitrateEstimator	access:public	signature:( const std::vector<PacketInfo>& packet_feedback_vector)
IncomingPacketInfo	RemoteBitrateEstimatorAbsSendTime.hpp	/^  void IncomingPacketInfo(int64_t arrival_time_ms,$/;"	p	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private	signature:(int64_t arrival_time_ms, uint32_t send_time_24bits, size_t payload_size, uint32_t ssrc)
InitializeExperiment	OveruseDetector.hpp	/^  void InitializeExperiment();$/;"	p	class:RTC::OveruseDetector	access:private	signature:()
InterArrival	InterArrival.hpp	/^  InterArrival(uint32_t timestamp_group_length_ticks,$/;"	p	class:RTC::InterArrival	access:public	signature:(uint32_t timestamp_group_length_ticks, double timestamp_to_ms_coeff, bool enable_burst_grouping)
InterArrival	InterArrival.hpp	/^class InterArrival {$/;"	c	namespace:RTC
IsBitrateImproving	RemoteBitrateEstimatorAbsSendTime.hpp	/^  bool IsBitrateImproving(int probe_bitrate_bps) const;$/;"	p	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private	signature:(int probe_bitrate_bps) const
IsFirstPacket	InterArrival.hpp	/^    bool IsFirstPacket() const {$/;"	f	struct:RTC::InterArrival::TimestampGroup	access:public	signature:() const
IsWithinClusterBounds	RemoteBitrateEstimatorAbsSendTime.hpp	/^  static bool IsWithinClusterBounds(int send_delta_ms,$/;"	p	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private	signature:(int send_delta_ms, const Cluster& cluster_aggregate)
LatestEstimate	AimdRateControl.hpp	/^  uint32_t LatestEstimate() const;$/;"	p	class:RTC::AimdRateControl	access:public	signature:() const
LatestEstimate	RemoteBitrateEstimator.hpp	/^  virtual bool LatestEstimate(std::vector<uint32_t>* ssrcs,$/;"	p	class:RTC::RemoteBitrateEstimator	access:public	signature:(std::vector<uint32_t>* ssrcs, uint32_t* bitrate_bps) const
MS_RTC_REMOTE_BITRATE_ESTIMATOR_AIMD_RATE_CONTROL_HPP	AimdRateControl.hpp	/^#define MS_RTC_REMOTE_BITRATE_ESTIMATOR_AIMD_RATE_CONTROL_HPP$/;"	d
MS_RTC_REMOTE_BITRATE_ESTIMATOR_BWE_DEFINES_HPP	BweDefines.hpp	/^#define MS_RTC_REMOTE_BITRATE_ESTIMATOR_BWE_DEFINES_HPP$/;"	d
MS_RTC_REMOTE_BITRATE_ESTIMATOR_INCLUDE_REMOTE_BITRATE_ESTIMATOR_HPP	RemoteBitrateEstimator.hpp	/^#define MS_RTC_REMOTE_BITRATE_ESTIMATOR_INCLUDE_REMOTE_BITRATE_ESTIMATOR_HPP$/;"	d
MS_RTC_REMOTE_BITRATE_ESTIMATOR_INTER_ARRIVAL_HPP	InterArrival.hpp	/^#define MS_RTC_REMOTE_BITRATE_ESTIMATOR_INTER_ARRIVAL_HPP$/;"	d
MS_RTC_REMOTE_BITRATE_ESTIMATOR_OVERUSE_DETECTOR_HPP	OveruseDetector.hpp	/^#define MS_RTC_REMOTE_BITRATE_ESTIMATOR_OVERUSE_DETECTOR_HPP$/;"	d
MS_RTC_REMOTE_BITRATE_ESTIMATOR_OVERUSE_ESTIMATOR_HPP	OveruseEstimator.hpp	/^#define MS_RTC_REMOTE_BITRATE_ESTIMATOR_OVERUSE_ESTIMATOR_HPP$/;"	d
MS_RTC_REMOTE_BITRATE_ESTIMATOR_REMOTE_BITRATE_ESTIMATOR_ABS_SEND_TIME_HPP	RemoteBitrateEstimatorAbsSendTime.hpp	/^#define MS_RTC_REMOTE_BITRATE_ESTIMATOR_REMOTE_BITRATE_ESTIMATOR_ABS_SEND_TIME_HPP$/;"	d
MS_RTC_REMOTE_BITRATE_ESTIMATOR_REMOTE_BITRATE_ESTIMATOR_SINGLE_STREAM_HPP	RemoteBitrateEstimatorSingleStream.hpp	/^#define MS_RTC_REMOTE_BITRATE_ESTIMATOR_REMOTE_BITRATE_ESTIMATOR_SINGLE_STREAM_HPP$/;"	d
MultiplicativeRateIncrease	AimdRateControl.hpp	/^  uint32_t MultiplicativeRateIncrease(int64_t now_ms, int64_t last_ms,$/;"	p	class:RTC::AimdRateControl	access:private	signature:(int64_t now_ms, int64_t last_ms, uint32_t current_bitrate_bps) const
NewTimestampGroup	InterArrival.hpp	/^  bool NewTimestampGroup(int64_t arrival_time_ms, uint32_t timestamp) const;$/;"	p	class:RTC::InterArrival	access:private	signature:(int64_t arrival_time_ms, uint32_t timestamp) const
OnProbeBitrate	RemoteBitrateEstimator.hpp	/^  virtual void OnProbeBitrate(uint32_t bitrate) {}$/;"	f	class:RTC::RemoteBitrateObserver	access:public	signature:(uint32_t bitrate)
OnReceiveBitrateChanged	RemoteBitrateEstimator.hpp	/^  virtual void OnReceiveBitrateChanged(const std::vector<uint32_t>& ssrcs,$/;"	p	class:RTC::RemoteBitrateObserver	access:public	signature:(const std::vector<uint32_t>& ssrcs, uint32_t bitrate)
OveruseDetector	OveruseDetector.hpp	/^  OveruseDetector();$/;"	p	class:RTC::OveruseDetector	access:public	signature:()
OveruseDetector	OveruseDetector.hpp	/^class OveruseDetector {$/;"	c	namespace:RTC
OveruseEstimator	OveruseEstimator.hpp	/^  explicit OveruseEstimator(const OverUseDetectorOptions& options);$/;"	p	class:RTC::OveruseEstimator	access:public	signature:(const OverUseDetectorOptions& options)
OveruseEstimator	OveruseEstimator.hpp	/^class OveruseEstimator {$/;"	c	namespace:RTC
PacketInOrder	InterArrival.hpp	/^  bool PacketInOrder(uint32_t timestamp);$/;"	p	class:RTC::InterArrival	access:private	signature:(uint32_t timestamp)
Probe	RemoteBitrateEstimatorAbsSendTime.hpp	/^  Probe(int64_t send_time_ms, int64_t recv_time_ms, size_t payload_size)$/;"	f	struct:RTC::Probe	access:public	signature:(int64_t send_time_ms, int64_t recv_time_ms, size_t payload_size)
Probe	RemoteBitrateEstimatorAbsSendTime.hpp	/^struct Probe {$/;"	s	namespace:RTC
ProbeResult	RemoteBitrateEstimatorAbsSendTime.hpp	/^  enum class ProbeResult { kBitrateUpdated, kNoUpdate };$/;"	c	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private
ProcessClusters	RemoteBitrateEstimatorAbsSendTime.hpp	/^  ProbeResult ProcessClusters(int64_t now_ms);$/;"	p	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private	signature:(int64_t now_ms)
RTC	AimdRateControl.hpp	/^namespace RTC {$/;"	n
RTC	BweDefines.hpp	/^namespace RTC {$/;"	n
RTC	InterArrival.hpp	/^namespace RTC {$/;"	n
RTC	OveruseDetector.hpp	/^namespace RTC {$/;"	n
RTC	OveruseEstimator.hpp	/^namespace RTC {$/;"	n
RTC	RemoteBitrateEstimator.hpp	/^namespace RTC {$/;"	n
RTC	RemoteBitrateEstimatorAbsSendTime.hpp	/^namespace RTC {$/;"	n
RTC	RemoteBitrateEstimatorSingleStream.hpp	/^namespace RTC {$/;"	n
RTC::AdaptiveThresholdExperimentIsDisabled	OveruseDetector.hpp	/^bool AdaptiveThresholdExperimentIsDisabled();$/;"	p	namespace:RTC	signature:()
RTC::AimdRateControl	AimdRateControl.hpp	/^class AimdRateControl {$/;"	c	namespace:RTC
RTC::AimdRateControl::AdditiveRateIncrease	AimdRateControl.hpp	/^  uint32_t AdditiveRateIncrease(int64_t now_ms, int64_t last_ms) const;$/;"	p	class:RTC::AimdRateControl	access:private	signature:(int64_t now_ms, int64_t last_ms) const
RTC::AimdRateControl::AimdRateControl	AimdRateControl.hpp	/^  AimdRateControl();$/;"	p	class:RTC::AimdRateControl	access:public	signature:()
RTC::AimdRateControl::ChangeBitrate	AimdRateControl.hpp	/^  uint32_t ChangeBitrate(uint32_t current_bitrate,$/;"	p	class:RTC::AimdRateControl	access:private	signature:(uint32_t current_bitrate, uint32_t incoming_bitrate, int64_t now_ms)
RTC::AimdRateControl::ChangeRegion	AimdRateControl.hpp	/^  void ChangeRegion(RateControlRegion region);$/;"	p	class:RTC::AimdRateControl	access:private	signature:(RateControlRegion region)
RTC::AimdRateControl::ChangeState	AimdRateControl.hpp	/^  void ChangeState(RateControlState new_state);$/;"	p	class:RTC::AimdRateControl	access:private	signature:(RateControlState new_state)
RTC::AimdRateControl::ChangeState	AimdRateControl.hpp	/^  void ChangeState(const RateControlInput& input, int64_t now_ms);$/;"	p	class:RTC::AimdRateControl	access:private	signature:(const RateControlInput& input, int64_t now_ms)
RTC::AimdRateControl::ClampBitrate	AimdRateControl.hpp	/^  uint32_t ClampBitrate(uint32_t new_bitrate_bps,$/;"	p	class:RTC::AimdRateControl	access:private	signature:(uint32_t new_bitrate_bps, uint32_t incoming_bitrate_bps) const
RTC::AimdRateControl::GetFeedbackInterval	AimdRateControl.hpp	/^  int64_t GetFeedbackInterval() const;$/;"	p	class:RTC::AimdRateControl	access:public	signature:() const
RTC::AimdRateControl::GetLastBitrateDecreaseBps	AimdRateControl.hpp	/^  virtual int GetLastBitrateDecreaseBps() const;$/;"	p	class:RTC::AimdRateControl	access:public	signature:() const
RTC::AimdRateControl::GetNearMaxIncreaseRateBps	AimdRateControl.hpp	/^  virtual int GetNearMaxIncreaseRateBps() const;$/;"	p	class:RTC::AimdRateControl	access:public	signature:() const
RTC::AimdRateControl::LatestEstimate	AimdRateControl.hpp	/^  uint32_t LatestEstimate() const;$/;"	p	class:RTC::AimdRateControl	access:public	signature:() const
RTC::AimdRateControl::MultiplicativeRateIncrease	AimdRateControl.hpp	/^  uint32_t MultiplicativeRateIncrease(int64_t now_ms, int64_t last_ms,$/;"	p	class:RTC::AimdRateControl	access:private	signature:(int64_t now_ms, int64_t last_ms, uint32_t current_bitrate_bps) const
RTC::AimdRateControl::SetEstimate	AimdRateControl.hpp	/^  void SetEstimate(int bitrate_bps, int64_t now_ms);$/;"	p	class:RTC::AimdRateControl	access:public	signature:(int bitrate_bps, int64_t now_ms)
RTC::AimdRateControl::SetMinBitrate	AimdRateControl.hpp	/^  void SetMinBitrate(int min_bitrate_bps);$/;"	p	class:RTC::AimdRateControl	access:public	signature:(int min_bitrate_bps)
RTC::AimdRateControl::SetRtt	AimdRateControl.hpp	/^  void SetRtt(int64_t rtt);$/;"	p	class:RTC::AimdRateControl	access:public	signature:(int64_t rtt)
RTC::AimdRateControl::SetStartBitrate	AimdRateControl.hpp	/^  void SetStartBitrate(int start_bitrate_bps);$/;"	p	class:RTC::AimdRateControl	access:public	signature:(int start_bitrate_bps)
RTC::AimdRateControl::TimeToReduceFurther	AimdRateControl.hpp	/^  bool TimeToReduceFurther(int64_t time_now,$/;"	p	class:RTC::AimdRateControl	access:public	signature:(int64_t time_now, uint32_t incoming_bitrate_bps) const
RTC::AimdRateControl::Update	AimdRateControl.hpp	/^  void Update(const RateControlInput* input, int64_t now_ms);$/;"	p	class:RTC::AimdRateControl	access:public	signature:(const RateControlInput* input, int64_t now_ms)
RTC::AimdRateControl::UpdateBandwidthEstimate	AimdRateControl.hpp	/^  uint32_t UpdateBandwidthEstimate(int64_t now_ms);$/;"	p	class:RTC::AimdRateControl	access:public	signature:(int64_t now_ms)
RTC::AimdRateControl::UpdateChangePeriod	AimdRateControl.hpp	/^  void UpdateChangePeriod(int64_t now_ms);$/;"	p	class:RTC::AimdRateControl	access:private	signature:(int64_t now_ms)
RTC::AimdRateControl::UpdateMaxBitRateEstimate	AimdRateControl.hpp	/^  void UpdateMaxBitRateEstimate(float incoming_bit_rate_kbps);$/;"	p	class:RTC::AimdRateControl	access:private	signature:(float incoming_bit_rate_kbps)
RTC::AimdRateControl::ValidEstimate	AimdRateControl.hpp	/^  bool ValidEstimate() const;$/;"	p	class:RTC::AimdRateControl	access:public	signature:() const
RTC::AimdRateControl::avg_max_bitrate_kbps_	AimdRateControl.hpp	/^  float avg_max_bitrate_kbps_;$/;"	m	class:RTC::AimdRateControl	access:private
RTC::AimdRateControl::beta_	AimdRateControl.hpp	/^  float beta_;$/;"	m	class:RTC::AimdRateControl	access:private
RTC::AimdRateControl::bitrate_is_initialized_	AimdRateControl.hpp	/^  bool bitrate_is_initialized_;$/;"	m	class:RTC::AimdRateControl	access:private
RTC::AimdRateControl::current_bitrate_bps_	AimdRateControl.hpp	/^  uint32_t current_bitrate_bps_;$/;"	m	class:RTC::AimdRateControl	access:private
RTC::AimdRateControl::current_input_	AimdRateControl.hpp	/^  RateControlInput current_input_;$/;"	m	class:RTC::AimdRateControl	access:private
RTC::AimdRateControl::in_experiment_	AimdRateControl.hpp	/^  bool in_experiment_;$/;"	m	class:RTC::AimdRateControl	access:private
RTC::AimdRateControl::last_decrease_	AimdRateControl.hpp	/^  int last_decrease_;$/;"	m	class:RTC::AimdRateControl	access:private
RTC::AimdRateControl::max_configured_bitrate_bps_	AimdRateControl.hpp	/^  uint32_t max_configured_bitrate_bps_;$/;"	m	class:RTC::AimdRateControl	access:private
RTC::AimdRateControl::min_configured_bitrate_bps_	AimdRateControl.hpp	/^  uint32_t min_configured_bitrate_bps_;$/;"	m	class:RTC::AimdRateControl	access:private
RTC::AimdRateControl::rate_control_region_	AimdRateControl.hpp	/^  RateControlRegion rate_control_region_;$/;"	m	class:RTC::AimdRateControl	access:private
RTC::AimdRateControl::rate_control_state_	AimdRateControl.hpp	/^  RateControlState rate_control_state_;$/;"	m	class:RTC::AimdRateControl	access:private
RTC::AimdRateControl::rtt_	AimdRateControl.hpp	/^  int64_t rtt_;$/;"	m	class:RTC::AimdRateControl	access:private
RTC::AimdRateControl::time_first_incoming_estimate_	AimdRateControl.hpp	/^  int64_t time_first_incoming_estimate_;$/;"	m	class:RTC::AimdRateControl	access:private
RTC::AimdRateControl::time_last_bitrate_change_	AimdRateControl.hpp	/^  int64_t time_last_bitrate_change_;$/;"	m	class:RTC::AimdRateControl	access:private
RTC::AimdRateControl::updated_	AimdRateControl.hpp	/^  bool updated_;$/;"	m	class:RTC::AimdRateControl	access:private
RTC::AimdRateControl::var_max_bitrate_kbps_	AimdRateControl.hpp	/^  float var_max_bitrate_kbps_;$/;"	m	class:RTC::AimdRateControl	access:private
RTC::AimdRateControl::~AimdRateControl	AimdRateControl.hpp	/^  virtual ~AimdRateControl();$/;"	p	class:RTC::AimdRateControl	access:public	signature:()
RTC::BandwidthUsage	BweDefines.hpp	/^enum BandwidthUsage {$/;"	g	namespace:RTC
RTC::BweNames	BweDefines.hpp	/^enum BweNames {$/;"	g	namespace:RTC
RTC::Cluster	RemoteBitrateEstimatorAbsSendTime.hpp	/^struct Cluster {$/;"	s	namespace:RTC
RTC::Cluster::Cluster	RemoteBitrateEstimatorAbsSendTime.hpp	/^  Cluster()$/;"	f	struct:RTC::Cluster	access:public	signature:()
RTC::Cluster::GetRecvBitrateBps	RemoteBitrateEstimatorAbsSendTime.hpp	/^  int GetRecvBitrateBps() const {$/;"	f	struct:RTC::Cluster	access:public	signature:() const
RTC::Cluster::GetSendBitrateBps	RemoteBitrateEstimatorAbsSendTime.hpp	/^  int GetSendBitrateBps() const {$/;"	f	struct:RTC::Cluster	access:public	signature:() const
RTC::Cluster::count	RemoteBitrateEstimatorAbsSendTime.hpp	/^  int count;$/;"	m	struct:RTC::Cluster	access:public
RTC::Cluster::mean_size	RemoteBitrateEstimatorAbsSendTime.hpp	/^  size_t mean_size;$/;"	m	struct:RTC::Cluster	access:public
RTC::Cluster::num_above_min_delta	RemoteBitrateEstimatorAbsSendTime.hpp	/^  int num_above_min_delta;$/;"	m	struct:RTC::Cluster	access:public
RTC::Cluster::recv_mean_ms	RemoteBitrateEstimatorAbsSendTime.hpp	/^  float recv_mean_ms;$/;"	m	struct:RTC::Cluster	access:public
RTC::Cluster::send_mean_ms	RemoteBitrateEstimatorAbsSendTime.hpp	/^  float send_mean_ms;$/;"	m	struct:RTC::Cluster	access:public
RTC::InterArrival	InterArrival.hpp	/^class InterArrival {$/;"	c	namespace:RTC
RTC::InterArrival::BelongsToBurst	InterArrival.hpp	/^  bool BelongsToBurst(int64_t arrival_time_ms, uint32_t timestamp) const;$/;"	p	class:RTC::InterArrival	access:private	signature:(int64_t arrival_time_ms, uint32_t timestamp) const
RTC::InterArrival::ComputeDeltas	InterArrival.hpp	/^  bool ComputeDeltas(uint32_t timestamp,$/;"	p	class:RTC::InterArrival	access:public	signature:(uint32_t timestamp, int64_t arrival_time_ms, int64_t system_time_ms, size_t packet_size, uint32_t* timestamp_delta, int64_t* arrival_time_delta_ms, int* packet_size_delta)
RTC::InterArrival::InterArrival	InterArrival.hpp	/^  InterArrival(uint32_t timestamp_group_length_ticks,$/;"	p	class:RTC::InterArrival	access:public	signature:(uint32_t timestamp_group_length_ticks, double timestamp_to_ms_coeff, bool enable_burst_grouping)
RTC::InterArrival::NewTimestampGroup	InterArrival.hpp	/^  bool NewTimestampGroup(int64_t arrival_time_ms, uint32_t timestamp) const;$/;"	p	class:RTC::InterArrival	access:private	signature:(int64_t arrival_time_ms, uint32_t timestamp) const
RTC::InterArrival::PacketInOrder	InterArrival.hpp	/^  bool PacketInOrder(uint32_t timestamp);$/;"	p	class:RTC::InterArrival	access:private	signature:(uint32_t timestamp)
RTC::InterArrival::Reset	InterArrival.hpp	/^  void Reset();$/;"	p	class:RTC::InterArrival	access:private	signature:()
RTC::InterArrival::TimestampGroup	InterArrival.hpp	/^  struct TimestampGroup {$/;"	s	class:RTC::InterArrival	access:private
RTC::InterArrival::TimestampGroup::IsFirstPacket	InterArrival.hpp	/^    bool IsFirstPacket() const {$/;"	f	struct:RTC::InterArrival::TimestampGroup	access:public	signature:() const
RTC::InterArrival::TimestampGroup::TimestampGroup	InterArrival.hpp	/^    TimestampGroup()$/;"	f	struct:RTC::InterArrival::TimestampGroup	access:public	signature:()
RTC::InterArrival::TimestampGroup::complete_time_ms	InterArrival.hpp	/^    int64_t complete_time_ms;$/;"	m	struct:RTC::InterArrival::TimestampGroup	access:public
RTC::InterArrival::TimestampGroup::first_timestamp	InterArrival.hpp	/^    uint32_t first_timestamp;$/;"	m	struct:RTC::InterArrival::TimestampGroup	access:public
RTC::InterArrival::TimestampGroup::last_system_time_ms	InterArrival.hpp	/^    int64_t last_system_time_ms;$/;"	m	struct:RTC::InterArrival::TimestampGroup	access:public
RTC::InterArrival::TimestampGroup::size	InterArrival.hpp	/^    size_t size;$/;"	m	struct:RTC::InterArrival::TimestampGroup	access:public
RTC::InterArrival::TimestampGroup::timestamp	InterArrival.hpp	/^    uint32_t timestamp;$/;"	m	struct:RTC::InterArrival::TimestampGroup	access:public
RTC::InterArrival::burst_grouping_	InterArrival.hpp	/^  bool burst_grouping_;$/;"	m	class:RTC::InterArrival	access:private
RTC::InterArrival::current_timestamp_group_	InterArrival.hpp	/^  TimestampGroup current_timestamp_group_;$/;"	m	class:RTC::InterArrival	access:private
RTC::InterArrival::kArrivalTimeOffsetThresholdMs	InterArrival.hpp	/^  static constexpr int64_t kArrivalTimeOffsetThresholdMs = 3000;$/;"	m	class:RTC::InterArrival	access:public
RTC::InterArrival::kReorderedResetThreshold	InterArrival.hpp	/^  static constexpr int kReorderedResetThreshold = 3;$/;"	m	class:RTC::InterArrival	access:public
RTC::InterArrival::kTimestampGroupLengthTicks	InterArrival.hpp	/^  const uint32_t kTimestampGroupLengthTicks;$/;"	m	class:RTC::InterArrival	access:private
RTC::InterArrival::num_consecutive_reordered_packets_	InterArrival.hpp	/^  int num_consecutive_reordered_packets_;$/;"	m	class:RTC::InterArrival	access:private
RTC::InterArrival::prev_timestamp_group_	InterArrival.hpp	/^  TimestampGroup prev_timestamp_group_;$/;"	m	class:RTC::InterArrival	access:private
RTC::InterArrival::timestamp_to_ms_coeff_	InterArrival.hpp	/^  double timestamp_to_ms_coeff_;$/;"	m	class:RTC::InterArrival	access:private
RTC::OveruseDetector	OveruseDetector.hpp	/^class OveruseDetector {$/;"	c	namespace:RTC
RTC::OveruseDetector::Detect	OveruseDetector.hpp	/^  BandwidthUsage Detect(double offset,$/;"	p	class:RTC::OveruseDetector	access:public	signature:(double offset, double timestamp_delta, int num_of_deltas, int64_t now_ms)
RTC::OveruseDetector::InitializeExperiment	OveruseDetector.hpp	/^  void InitializeExperiment();$/;"	p	class:RTC::OveruseDetector	access:private	signature:()
RTC::OveruseDetector::OveruseDetector	OveruseDetector.hpp	/^  OveruseDetector();$/;"	p	class:RTC::OveruseDetector	access:public	signature:()
RTC::OveruseDetector::State	OveruseDetector.hpp	/^  BandwidthUsage State() const;$/;"	p	class:RTC::OveruseDetector	access:public	signature:() const
RTC::OveruseDetector::UpdateThreshold	OveruseDetector.hpp	/^  void UpdateThreshold(double modified_offset, int64_t now_ms);$/;"	p	class:RTC::OveruseDetector	access:private	signature:(double modified_offset, int64_t now_ms)
RTC::OveruseDetector::hypothesis_	OveruseDetector.hpp	/^  BandwidthUsage hypothesis_;$/;"	m	class:RTC::OveruseDetector	access:private
RTC::OveruseDetector::in_experiment_	OveruseDetector.hpp	/^  bool in_experiment_;$/;"	m	class:RTC::OveruseDetector	access:private
RTC::OveruseDetector::k_down_	OveruseDetector.hpp	/^  double k_down_;$/;"	m	class:RTC::OveruseDetector	access:private
RTC::OveruseDetector::k_up_	OveruseDetector.hpp	/^  double k_up_;$/;"	m	class:RTC::OveruseDetector	access:private
RTC::OveruseDetector::last_update_ms_	OveruseDetector.hpp	/^  int64_t last_update_ms_;$/;"	m	class:RTC::OveruseDetector	access:private
RTC::OveruseDetector::overuse_counter_	OveruseDetector.hpp	/^  int overuse_counter_;$/;"	m	class:RTC::OveruseDetector	access:private
RTC::OveruseDetector::overusing_time_threshold_	OveruseDetector.hpp	/^  double overusing_time_threshold_;$/;"	m	class:RTC::OveruseDetector	access:private
RTC::OveruseDetector::prev_offset_	OveruseDetector.hpp	/^  double prev_offset_;$/;"	m	class:RTC::OveruseDetector	access:private
RTC::OveruseDetector::threshold_	OveruseDetector.hpp	/^  double threshold_;$/;"	m	class:RTC::OveruseDetector	access:private
RTC::OveruseDetector::time_over_using_	OveruseDetector.hpp	/^  double time_over_using_;$/;"	m	class:RTC::OveruseDetector	access:private
RTC::OveruseDetector::~OveruseDetector	OveruseDetector.hpp	/^  virtual ~OveruseDetector();$/;"	p	class:RTC::OveruseDetector	access:public	signature:()
RTC::OveruseEstimator	OveruseEstimator.hpp	/^class OveruseEstimator {$/;"	c	namespace:RTC
RTC::OveruseEstimator::E_	OveruseEstimator.hpp	/^  double E_[2][2];$/;"	m	class:RTC::OveruseEstimator	access:private
RTC::OveruseEstimator::OveruseEstimator	OveruseEstimator.hpp	/^  explicit OveruseEstimator(const OverUseDetectorOptions& options);$/;"	p	class:RTC::OveruseEstimator	access:public	signature:(const OverUseDetectorOptions& options)
RTC::OveruseEstimator::Update	OveruseEstimator.hpp	/^  void Update(int64_t t_delta,$/;"	p	class:RTC::OveruseEstimator	access:public	signature:(int64_t t_delta, double ts_delta, int size_delta, BandwidthUsage current_hypothesis, int64_t now_ms)
RTC::OveruseEstimator::UpdateMinFramePeriod	OveruseEstimator.hpp	/^  double UpdateMinFramePeriod(double ts_delta);$/;"	p	class:RTC::OveruseEstimator	access:private	signature:(double ts_delta)
RTC::OveruseEstimator::UpdateNoiseEstimate	OveruseEstimator.hpp	/^  void UpdateNoiseEstimate(double residual, double ts_delta, bool stable_state);$/;"	p	class:RTC::OveruseEstimator	access:private	signature:(double residual, double ts_delta, bool stable_state)
RTC::OveruseEstimator::avg_noise_	OveruseEstimator.hpp	/^  double avg_noise_;$/;"	m	class:RTC::OveruseEstimator	access:private
RTC::OveruseEstimator::num_of_deltas	OveruseEstimator.hpp	/^  unsigned int num_of_deltas() const {$/;"	f	class:RTC::OveruseEstimator	access:public	signature:() const
RTC::OveruseEstimator::num_of_deltas_	OveruseEstimator.hpp	/^  uint16_t num_of_deltas_;$/;"	m	class:RTC::OveruseEstimator	access:private
RTC::OveruseEstimator::offset	OveruseEstimator.hpp	/^  double offset() const {$/;"	f	class:RTC::OveruseEstimator	access:public	signature:() const
RTC::OveruseEstimator::offset_	OveruseEstimator.hpp	/^  double offset_;$/;"	m	class:RTC::OveruseEstimator	access:private
RTC::OveruseEstimator::options_	OveruseEstimator.hpp	/^  OverUseDetectorOptions options_;$/;"	m	class:RTC::OveruseEstimator	access:private
RTC::OveruseEstimator::prev_offset_	OveruseEstimator.hpp	/^  double prev_offset_;$/;"	m	class:RTC::OveruseEstimator	access:private
RTC::OveruseEstimator::process_noise_	OveruseEstimator.hpp	/^  double process_noise_[2];$/;"	m	class:RTC::OveruseEstimator	access:private
RTC::OveruseEstimator::slope_	OveruseEstimator.hpp	/^  double slope_;$/;"	m	class:RTC::OveruseEstimator	access:private
RTC::OveruseEstimator::ts_delta_hist_	OveruseEstimator.hpp	/^  std::deque<double> ts_delta_hist_;$/;"	m	class:RTC::OveruseEstimator	access:private
RTC::OveruseEstimator::var_noise	OveruseEstimator.hpp	/^  double var_noise() const {$/;"	f	class:RTC::OveruseEstimator	access:public	signature:() const
RTC::OveruseEstimator::var_noise_	OveruseEstimator.hpp	/^  double var_noise_;$/;"	m	class:RTC::OveruseEstimator	access:private
RTC::OveruseEstimator::~OveruseEstimator	OveruseEstimator.hpp	/^  ~OveruseEstimator();$/;"	p	class:RTC::OveruseEstimator	access:public	signature:()
RTC::Probe	RemoteBitrateEstimatorAbsSendTime.hpp	/^struct Probe {$/;"	s	namespace:RTC
RTC::Probe::Probe	RemoteBitrateEstimatorAbsSendTime.hpp	/^  Probe(int64_t send_time_ms, int64_t recv_time_ms, size_t payload_size)$/;"	f	struct:RTC::Probe	access:public	signature:(int64_t send_time_ms, int64_t recv_time_ms, size_t payload_size)
RTC::Probe::payload_size	RemoteBitrateEstimatorAbsSendTime.hpp	/^  size_t payload_size;$/;"	m	struct:RTC::Probe	access:public
RTC::Probe::recv_time_ms	RemoteBitrateEstimatorAbsSendTime.hpp	/^  int64_t recv_time_ms;$/;"	m	struct:RTC::Probe	access:public
RTC::Probe::send_time_ms	RemoteBitrateEstimatorAbsSendTime.hpp	/^  int64_t send_time_ms;$/;"	m	struct:RTC::Probe	access:public
RTC::RateControlInput	BweDefines.hpp	/^struct RateControlInput {$/;"	s	namespace:RTC
RTC::RateControlInput::RateControlInput	BweDefines.hpp	/^  RateControlInput(BandwidthUsage bw_state,$/;"	f	struct:RTC::RateControlInput	access:public	signature:(BandwidthUsage bw_state, const uint32_t incoming_bitrate, double noise_var)
RTC::RateControlInput::bw_state	BweDefines.hpp	/^  BandwidthUsage bw_state;$/;"	m	struct:RTC::RateControlInput	access:public
RTC::RateControlInput::incoming_bitrate	BweDefines.hpp	/^  uint32_t incoming_bitrate;$/;"	m	struct:RTC::RateControlInput	access:public
RTC::RateControlInput::noise_var	BweDefines.hpp	/^  double noise_var;$/;"	m	struct:RTC::RateControlInput	access:public
RTC::RateControlRegion	BweDefines.hpp	/^enum RateControlRegion { kRcNearMax, kRcAboveMax, kRcMaxUnknown };$/;"	g	namespace:RTC
RTC::RateControlState	BweDefines.hpp	/^enum RateControlState { kRcHold, kRcIncrease, kRcDecrease };$/;"	g	namespace:RTC
RTC::ReceiveBandwidthEstimatorStats	RemoteBitrateEstimator.hpp	/^struct ReceiveBandwidthEstimatorStats {};$/;"	s	namespace:RTC
RTC::RemoteBitrateEstimator	RemoteBitrateEstimator.hpp	/^class RemoteBitrateEstimator : public CallStatsObserver, public Module {$/;"	c	namespace:RTC	inherits:CallStatsObserver,Module
RTC::RemoteBitrateEstimator::GetStats	RemoteBitrateEstimator.hpp	/^  virtual bool GetStats(ReceiveBandwidthEstimatorStats* output) const {$/;"	f	class:RTC::RemoteBitrateEstimator	access:public	signature:(ReceiveBandwidthEstimatorStats* output) const
RTC::RemoteBitrateEstimator::IncomingPacket	RemoteBitrateEstimator.hpp	/^  virtual void IncomingPacket(int64_t arrival_time_ms,$/;"	p	class:RTC::RemoteBitrateEstimator	access:public	signature:(int64_t arrival_time_ms, size_t payload_size, const RTPHeader& header)
RTC::RemoteBitrateEstimator::IncomingPacketFeedbackVector	RemoteBitrateEstimator.hpp	/^  virtual void IncomingPacketFeedbackVector($/;"	f	class:RTC::RemoteBitrateEstimator	access:public	signature:( const std::vector<PacketInfo>& packet_feedback_vector)
RTC::RemoteBitrateEstimator::LatestEstimate	RemoteBitrateEstimator.hpp	/^  virtual bool LatestEstimate(std::vector<uint32_t>* ssrcs,$/;"	p	class:RTC::RemoteBitrateEstimator	access:public	signature:(std::vector<uint32_t>* ssrcs, uint32_t* bitrate_bps) const
RTC::RemoteBitrateEstimator::RemoveStream	RemoteBitrateEstimator.hpp	/^  virtual void RemoveStream(uint32_t ssrc) = 0;$/;"	p	class:RTC::RemoteBitrateEstimator	access:public	signature:(uint32_t ssrc)
RTC::RemoteBitrateEstimator::SetMinBitrate	RemoteBitrateEstimator.hpp	/^  virtual void SetMinBitrate(int min_bitrate_bps) = 0;$/;"	p	class:RTC::RemoteBitrateEstimator	access:public	signature:(int min_bitrate_bps)
RTC::RemoteBitrateEstimator::kProcessIntervalMs	RemoteBitrateEstimator.hpp	/^  static const int64_t kProcessIntervalMs = 500;$/;"	m	class:RTC::RemoteBitrateEstimator	access:protected
RTC::RemoteBitrateEstimator::kStreamTimeOutMs	RemoteBitrateEstimator.hpp	/^  static const int64_t kStreamTimeOutMs = 2000;$/;"	m	class:RTC::RemoteBitrateEstimator	access:protected
RTC::RemoteBitrateEstimator::~RemoteBitrateEstimator	RemoteBitrateEstimator.hpp	/^  virtual ~RemoteBitrateEstimator() {}$/;"	f	class:RTC::RemoteBitrateEstimator	access:public	signature:()
RTC::RemoteBitrateEstimatorAbsSendTime	RemoteBitrateEstimatorAbsSendTime.hpp	/^class RemoteBitrateEstimatorAbsSendTime : public RemoteBitrateEstimator {$/;"	c	namespace:RTC	inherits:RemoteBitrateEstimator
RTC::RemoteBitrateEstimatorAbsSendTime::AddCluster	RemoteBitrateEstimatorAbsSendTime.hpp	/^  static void AddCluster(std::list<Cluster>* clusters, Cluster* cluster);$/;"	p	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private	signature:(std::list<Cluster>* clusters, Cluster* cluster)
RTC::RemoteBitrateEstimatorAbsSendTime::ComputeClusters	RemoteBitrateEstimatorAbsSendTime.hpp	/^  void ComputeClusters(std::list<Cluster>* clusters) const;$/;"	p	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private	signature:(std::list<Cluster>* clusters) const
RTC::RemoteBitrateEstimatorAbsSendTime::FindBestProbe	RemoteBitrateEstimatorAbsSendTime.hpp	/^  std::list<Cluster>::const_iterator FindBestProbe($/;"	p	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private	signature:( const std::list<Cluster>& clusters) const
RTC::RemoteBitrateEstimatorAbsSendTime::IncomingPacketInfo	RemoteBitrateEstimatorAbsSendTime.hpp	/^  void IncomingPacketInfo(int64_t arrival_time_ms,$/;"	p	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private	signature:(int64_t arrival_time_ms, uint32_t send_time_24bits, size_t payload_size, uint32_t ssrc)
RTC::RemoteBitrateEstimatorAbsSendTime::IsBitrateImproving	RemoteBitrateEstimatorAbsSendTime.hpp	/^  bool IsBitrateImproving(int probe_bitrate_bps) const;$/;"	p	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private	signature:(int probe_bitrate_bps) const
RTC::RemoteBitrateEstimatorAbsSendTime::IsWithinClusterBounds	RemoteBitrateEstimatorAbsSendTime.hpp	/^  static bool IsWithinClusterBounds(int send_delta_ms,$/;"	p	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private	signature:(int send_delta_ms, const Cluster& cluster_aggregate)
RTC::RemoteBitrateEstimatorAbsSendTime::ProbeResult	RemoteBitrateEstimatorAbsSendTime.hpp	/^  enum class ProbeResult { kBitrateUpdated, kNoUpdate };$/;"	c	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private
RTC::RemoteBitrateEstimatorAbsSendTime::ProbeResult::kBitrateUpdated	RemoteBitrateEstimatorAbsSendTime.hpp	/^  enum class ProbeResult { kBitrateUpdated, kNoUpdate };$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime::ProbeResult	access:private
RTC::RemoteBitrateEstimatorAbsSendTime::ProcessClusters	RemoteBitrateEstimatorAbsSendTime.hpp	/^  ProbeResult ProcessClusters(int64_t now_ms);$/;"	p	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private	signature:(int64_t now_ms)
RTC::RemoteBitrateEstimatorAbsSendTime::RemoteBitrateEstimatorAbsSendTime	RemoteBitrateEstimatorAbsSendTime.hpp	/^  RemoteBitrateEstimatorAbsSendTime(RemoteBitrateObserver* observer);$/;"	p	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:public	signature:(RemoteBitrateObserver* observer)
RTC::RemoteBitrateEstimatorAbsSendTime::Ssrcs	RemoteBitrateEstimatorAbsSendTime.hpp	/^  typedef std::map<uint32_t, int64_t> Ssrcs;$/;"	t	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private
RTC::RemoteBitrateEstimatorAbsSendTime::TimeoutStreams	RemoteBitrateEstimatorAbsSendTime.hpp	/^  void TimeoutStreams(int64_t now_ms);$/;"	p	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private	signature:(int64_t now_ms)
RTC::RemoteBitrateEstimatorAbsSendTime::detector_	RemoteBitrateEstimatorAbsSendTime.hpp	/^  OveruseDetector detector_;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private
RTC::RemoteBitrateEstimatorAbsSendTime::estimator_	RemoteBitrateEstimatorAbsSendTime.hpp	/^  std::unique_ptr<OveruseEstimator> estimator_;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private
RTC::RemoteBitrateEstimatorAbsSendTime::first_packet_time_ms_	RemoteBitrateEstimatorAbsSendTime.hpp	/^  int64_t first_packet_time_ms_;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private
RTC::RemoteBitrateEstimatorAbsSendTime::incoming_bitrate_	RemoteBitrateEstimatorAbsSendTime.hpp	/^  RateStatistics incoming_bitrate_;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private
RTC::RemoteBitrateEstimatorAbsSendTime::incoming_bitrate_initialized_	RemoteBitrateEstimatorAbsSendTime.hpp	/^  bool incoming_bitrate_initialized_;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private
RTC::RemoteBitrateEstimatorAbsSendTime::inter_arrival_	RemoteBitrateEstimatorAbsSendTime.hpp	/^  std::unique_ptr<InterArrival> inter_arrival_;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private
RTC::RemoteBitrateEstimatorAbsSendTime::last_update_ms_	RemoteBitrateEstimatorAbsSendTime.hpp	/^  int64_t last_update_ms_;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private
RTC::RemoteBitrateEstimatorAbsSendTime::observer_	RemoteBitrateEstimatorAbsSendTime.hpp	/^  RemoteBitrateObserver* const observer_;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private
RTC::RemoteBitrateEstimatorAbsSendTime::override	RemoteBitrateEstimatorAbsSendTime.hpp	/^                      const RTPHeader& header) override;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:public
RTC::RemoteBitrateEstimatorAbsSendTime::override	RemoteBitrateEstimatorAbsSendTime.hpp	/^                      uint32_t* bitrate_bps) const override;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:public
RTC::RemoteBitrateEstimatorAbsSendTime::override	RemoteBitrateEstimatorAbsSendTime.hpp	/^      const std::vector<PacketInfo>& packet_feedback_vector) override;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:public
RTC::RemoteBitrateEstimatorAbsSendTime::override	RemoteBitrateEstimatorAbsSendTime.hpp	/^  int64_t TimeUntilNextProcess() override;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:public
RTC::RemoteBitrateEstimatorAbsSendTime::override	RemoteBitrateEstimatorAbsSendTime.hpp	/^  void OnRttUpdate(int64_t avg_rtt_ms, int64_t max_rtt_ms) override;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:public
RTC::RemoteBitrateEstimatorAbsSendTime::override	RemoteBitrateEstimatorAbsSendTime.hpp	/^  void Process() override;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:public
RTC::RemoteBitrateEstimatorAbsSendTime::override	RemoteBitrateEstimatorAbsSendTime.hpp	/^  void RemoveStream(uint32_t ssrc) override;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:public
RTC::RemoteBitrateEstimatorAbsSendTime::override	RemoteBitrateEstimatorAbsSendTime.hpp	/^  void SetMinBitrate(int min_bitrate_bps) override;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:public
RTC::RemoteBitrateEstimatorAbsSendTime::probes_	RemoteBitrateEstimatorAbsSendTime.hpp	/^  std::list<Probe> probes_;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private
RTC::RemoteBitrateEstimatorAbsSendTime::recent_propagation_delta_ms_	RemoteBitrateEstimatorAbsSendTime.hpp	/^  std::vector<int> recent_propagation_delta_ms_;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private
RTC::RemoteBitrateEstimatorAbsSendTime::recent_update_time_ms_	RemoteBitrateEstimatorAbsSendTime.hpp	/^  std::vector<int64_t> recent_update_time_ms_;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private
RTC::RemoteBitrateEstimatorAbsSendTime::remote_rate_	RemoteBitrateEstimatorAbsSendTime.hpp	/^  AimdRateControl remote_rate_;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private
RTC::RemoteBitrateEstimatorAbsSendTime::ssrcs_	RemoteBitrateEstimatorAbsSendTime.hpp	/^  Ssrcs ssrcs_;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private
RTC::RemoteBitrateEstimatorAbsSendTime::total_probes_received_	RemoteBitrateEstimatorAbsSendTime.hpp	/^  size_t total_probes_received_;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private
RTC::RemoteBitrateEstimatorAbsSendTime::uma_recorded_	RemoteBitrateEstimatorAbsSendTime.hpp	/^  bool uma_recorded_;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private
RTC::RemoteBitrateEstimatorAbsSendTime::~RemoteBitrateEstimatorAbsSendTime	RemoteBitrateEstimatorAbsSendTime.hpp	/^  virtual ~RemoteBitrateEstimatorAbsSendTime() {}$/;"	f	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:public	signature:()
RTC::RemoteBitrateEstimatorSingleStream	RemoteBitrateEstimatorSingleStream.hpp	/^class RemoteBitrateEstimatorSingleStream : public RemoteBitrateEstimator {$/;"	c	namespace:RTC	inherits:RemoteBitrateEstimator
RTC::RemoteBitrateEstimatorSingleStream::GetRemoteRate	RemoteBitrateEstimatorSingleStream.hpp	/^  AimdRateControl* GetRemoteRate();$/;"	p	class:RTC::RemoteBitrateEstimatorSingleStream	access:private	signature:()
RTC::RemoteBitrateEstimatorSingleStream::GetSsrcs	RemoteBitrateEstimatorSingleStream.hpp	/^  void GetSsrcs(std::vector<uint32_t>* ssrcs) const;$/;"	p	class:RTC::RemoteBitrateEstimatorSingleStream	access:private	signature:(std::vector<uint32_t>* ssrcs) const
RTC::RemoteBitrateEstimatorSingleStream::RemoteBitrateEstimatorSingleStream	RemoteBitrateEstimatorSingleStream.hpp	/^  RemoteBitrateEstimatorSingleStream(RemoteBitrateObserver* observer);$/;"	p	class:RTC::RemoteBitrateEstimatorSingleStream	access:public	signature:(RemoteBitrateObserver* observer)
RTC::RemoteBitrateEstimatorSingleStream::SsrcOveruseEstimatorMap	RemoteBitrateEstimatorSingleStream.hpp	/^  typedef std::map<uint32_t, Detector*> SsrcOveruseEstimatorMap;$/;"	t	class:RTC::RemoteBitrateEstimatorSingleStream	access:private
RTC::RemoteBitrateEstimatorSingleStream::UpdateEstimate	RemoteBitrateEstimatorSingleStream.hpp	/^  void UpdateEstimate(int64_t time_now);$/;"	p	class:RTC::RemoteBitrateEstimatorSingleStream	access:private	signature:(int64_t time_now)
RTC::RemoteBitrateEstimatorSingleStream::incoming_bitrate_	RemoteBitrateEstimatorSingleStream.hpp	/^  RateStatistics incoming_bitrate_;$/;"	m	class:RTC::RemoteBitrateEstimatorSingleStream	access:private
RTC::RemoteBitrateEstimatorSingleStream::last_process_time_	RemoteBitrateEstimatorSingleStream.hpp	/^  int64_t last_process_time_;$/;"	m	class:RTC::RemoteBitrateEstimatorSingleStream	access:private
RTC::RemoteBitrateEstimatorSingleStream::last_valid_incoming_bitrate_	RemoteBitrateEstimatorSingleStream.hpp	/^  uint32_t last_valid_incoming_bitrate_;$/;"	m	class:RTC::RemoteBitrateEstimatorSingleStream	access:private
RTC::RemoteBitrateEstimatorSingleStream::observer_	RemoteBitrateEstimatorSingleStream.hpp	/^  RemoteBitrateObserver* observer_;$/;"	m	class:RTC::RemoteBitrateEstimatorSingleStream	access:private
RTC::RemoteBitrateEstimatorSingleStream::override	RemoteBitrateEstimatorSingleStream.hpp	/^                      const RTPHeader& header) override;$/;"	m	class:RTC::RemoteBitrateEstimatorSingleStream	access:public
RTC::RemoteBitrateEstimatorSingleStream::override	RemoteBitrateEstimatorSingleStream.hpp	/^                      uint32_t* bitrate_bps) const override;$/;"	m	class:RTC::RemoteBitrateEstimatorSingleStream	access:public
RTC::RemoteBitrateEstimatorSingleStream::override	RemoteBitrateEstimatorSingleStream.hpp	/^  int64_t TimeUntilNextProcess() override;$/;"	m	class:RTC::RemoteBitrateEstimatorSingleStream	access:public
RTC::RemoteBitrateEstimatorSingleStream::override	RemoteBitrateEstimatorSingleStream.hpp	/^  void OnRttUpdate(int64_t avg_rtt_ms, int64_t max_rtt_ms) override;$/;"	m	class:RTC::RemoteBitrateEstimatorSingleStream	access:public
RTC::RemoteBitrateEstimatorSingleStream::override	RemoteBitrateEstimatorSingleStream.hpp	/^  void Process() override;$/;"	m	class:RTC::RemoteBitrateEstimatorSingleStream	access:public
RTC::RemoteBitrateEstimatorSingleStream::override	RemoteBitrateEstimatorSingleStream.hpp	/^  void RemoveStream(uint32_t ssrc) override;$/;"	m	class:RTC::RemoteBitrateEstimatorSingleStream	access:public
RTC::RemoteBitrateEstimatorSingleStream::override	RemoteBitrateEstimatorSingleStream.hpp	/^  void SetMinBitrate(int min_bitrate_bps) override;$/;"	m	class:RTC::RemoteBitrateEstimatorSingleStream	access:public
RTC::RemoteBitrateEstimatorSingleStream::overuse_detectors_	RemoteBitrateEstimatorSingleStream.hpp	/^  SsrcOveruseEstimatorMap overuse_detectors_;$/;"	m	class:RTC::RemoteBitrateEstimatorSingleStream	access:private
RTC::RemoteBitrateEstimatorSingleStream::process_interval_ms_	RemoteBitrateEstimatorSingleStream.hpp	/^  int64_t process_interval_ms_;$/;"	m	class:RTC::RemoteBitrateEstimatorSingleStream	access:private
RTC::RemoteBitrateEstimatorSingleStream::remote_rate_	RemoteBitrateEstimatorSingleStream.hpp	/^  std::unique_ptr<AimdRateControl> remote_rate_;$/;"	m	class:RTC::RemoteBitrateEstimatorSingleStream	access:private
RTC::RemoteBitrateEstimatorSingleStream::uma_recorded_	RemoteBitrateEstimatorSingleStream.hpp	/^  bool uma_recorded_;$/;"	m	class:RTC::RemoteBitrateEstimatorSingleStream	access:private
RTC::RemoteBitrateEstimatorSingleStream::~RemoteBitrateEstimatorSingleStream	RemoteBitrateEstimatorSingleStream.hpp	/^  virtual ~RemoteBitrateEstimatorSingleStream();$/;"	p	class:RTC::RemoteBitrateEstimatorSingleStream	access:public	signature:()
RTC::RemoteBitrateObserver	RemoteBitrateEstimator.hpp	/^class RemoteBitrateObserver {$/;"	c	namespace:RTC
RTC::RemoteBitrateObserver::OnProbeBitrate	RemoteBitrateEstimator.hpp	/^  virtual void OnProbeBitrate(uint32_t bitrate) {}$/;"	f	class:RTC::RemoteBitrateObserver	access:public	signature:(uint32_t bitrate)
RTC::RemoteBitrateObserver::OnReceiveBitrateChanged	RemoteBitrateEstimator.hpp	/^  virtual void OnReceiveBitrateChanged(const std::vector<uint32_t>& ssrcs,$/;"	p	class:RTC::RemoteBitrateObserver	access:public	signature:(const std::vector<uint32_t>& ssrcs, uint32_t bitrate)
RTC::RemoteBitrateObserver::~RemoteBitrateObserver	RemoteBitrateEstimator.hpp	/^  virtual ~RemoteBitrateObserver() {}$/;"	f	class:RTC::RemoteBitrateObserver	access:public	signature:()
RTC::congestion_controller	BweDefines.hpp	/^namespace congestion_controller {$/;"	n	namespace:RTC
RTC::congestion_controller::GetMinBitrateBps	BweDefines.hpp	/^int GetMinBitrateBps();$/;"	p	namespace:RTC::congestion_controller	signature:()
RTC::kBitrateWindowMs	BweDefines.hpp	/^static const int64_t kBitrateWindowMs = 1000;$/;"	m	namespace:RTC
RTC::kBwNormal	BweDefines.hpp	/^  kBwNormal = 0,$/;"	e	enum:RTC::BandwidthUsage
RTC::kBwOverusing	BweDefines.hpp	/^  kBwOverusing = 2,$/;"	e	enum:RTC::BandwidthUsage
RTC::kBwUnderusing	BweDefines.hpp	/^  kBwUnderusing = 1,$/;"	e	enum:RTC::BandwidthUsage
RTC::kBweNamesMax	BweDefines.hpp	/^  kBweNamesMax = 4$/;"	e	enum:RTC::BweNames
RTC::kRcAboveMax	BweDefines.hpp	/^enum RateControlRegion { kRcNearMax, kRcAboveMax, kRcMaxUnknown };$/;"	e	enum:RTC::RateControlRegion
RTC::kRcDecrease	BweDefines.hpp	/^enum RateControlState { kRcHold, kRcIncrease, kRcDecrease };$/;"	e	enum:RTC::RateControlState
RTC::kRcHold	BweDefines.hpp	/^enum RateControlState { kRcHold, kRcIncrease, kRcDecrease };$/;"	e	enum:RTC::RateControlState
RTC::kRcIncrease	BweDefines.hpp	/^enum RateControlState { kRcHold, kRcIncrease, kRcDecrease };$/;"	e	enum:RTC::RateControlState
RTC::kRcMaxUnknown	BweDefines.hpp	/^enum RateControlRegion { kRcNearMax, kRcAboveMax, kRcMaxUnknown };$/;"	e	enum:RTC::RateControlRegion
RTC::kRcNearMax	BweDefines.hpp	/^enum RateControlRegion { kRcNearMax, kRcAboveMax, kRcMaxUnknown };$/;"	e	enum:RTC::RateControlRegion
RTC::kReceiverAbsSendTime	BweDefines.hpp	/^  kReceiverAbsSendTime = 2,$/;"	e	enum:RTC::BweNames
RTC::kReceiverNoExtension	BweDefines.hpp	/^  kReceiverNoExtension = 0,$/;"	e	enum:RTC::BweNames
RTC::kReceiverTOffset	BweDefines.hpp	/^  kReceiverTOffset = 1,$/;"	e	enum:RTC::BweNames
RTC::kSendSideTransportSeqNum	BweDefines.hpp	/^  kSendSideTransportSeqNum = 3,$/;"	e	enum:RTC::BweNames
RateControlInput	BweDefines.hpp	/^  RateControlInput(BandwidthUsage bw_state,$/;"	f	struct:RTC::RateControlInput	access:public	signature:(BandwidthUsage bw_state, const uint32_t incoming_bitrate, double noise_var)
RateControlInput	BweDefines.hpp	/^struct RateControlInput {$/;"	s	namespace:RTC
RateControlRegion	BweDefines.hpp	/^enum RateControlRegion { kRcNearMax, kRcAboveMax, kRcMaxUnknown };$/;"	g	namespace:RTC
RateControlState	BweDefines.hpp	/^enum RateControlState { kRcHold, kRcIncrease, kRcDecrease };$/;"	g	namespace:RTC
ReceiveBandwidthEstimatorStats	RemoteBitrateEstimator.hpp	/^struct ReceiveBandwidthEstimatorStats {};$/;"	s	namespace:RTC
RemoteBitrateEstimator	RemoteBitrateEstimator.hpp	/^class RemoteBitrateEstimator : public CallStatsObserver, public Module {$/;"	c	namespace:RTC	inherits:CallStatsObserver,Module
RemoteBitrateEstimatorAbsSendTime	RemoteBitrateEstimatorAbsSendTime.hpp	/^  RemoteBitrateEstimatorAbsSendTime(RemoteBitrateObserver* observer);$/;"	p	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:public	signature:(RemoteBitrateObserver* observer)
RemoteBitrateEstimatorAbsSendTime	RemoteBitrateEstimatorAbsSendTime.hpp	/^class RemoteBitrateEstimatorAbsSendTime : public RemoteBitrateEstimator {$/;"	c	namespace:RTC	inherits:RemoteBitrateEstimator
RemoteBitrateEstimatorSingleStream	RemoteBitrateEstimatorSingleStream.hpp	/^  RemoteBitrateEstimatorSingleStream(RemoteBitrateObserver* observer);$/;"	p	class:RTC::RemoteBitrateEstimatorSingleStream	access:public	signature:(RemoteBitrateObserver* observer)
RemoteBitrateEstimatorSingleStream	RemoteBitrateEstimatorSingleStream.hpp	/^class RemoteBitrateEstimatorSingleStream : public RemoteBitrateEstimator {$/;"	c	namespace:RTC	inherits:RemoteBitrateEstimator
RemoteBitrateObserver	RemoteBitrateEstimator.hpp	/^class RemoteBitrateObserver {$/;"	c	namespace:RTC
RemoveStream	RemoteBitrateEstimator.hpp	/^  virtual void RemoveStream(uint32_t ssrc) = 0;$/;"	p	class:RTC::RemoteBitrateEstimator	access:public	signature:(uint32_t ssrc)
Reset	InterArrival.hpp	/^  void Reset();$/;"	p	class:RTC::InterArrival	access:private	signature:()
SetEstimate	AimdRateControl.hpp	/^  void SetEstimate(int bitrate_bps, int64_t now_ms);$/;"	p	class:RTC::AimdRateControl	access:public	signature:(int bitrate_bps, int64_t now_ms)
SetMinBitrate	AimdRateControl.hpp	/^  void SetMinBitrate(int min_bitrate_bps);$/;"	p	class:RTC::AimdRateControl	access:public	signature:(int min_bitrate_bps)
SetMinBitrate	RemoteBitrateEstimator.hpp	/^  virtual void SetMinBitrate(int min_bitrate_bps) = 0;$/;"	p	class:RTC::RemoteBitrateEstimator	access:public	signature:(int min_bitrate_bps)
SetRtt	AimdRateControl.hpp	/^  void SetRtt(int64_t rtt);$/;"	p	class:RTC::AimdRateControl	access:public	signature:(int64_t rtt)
SetStartBitrate	AimdRateControl.hpp	/^  void SetStartBitrate(int start_bitrate_bps);$/;"	p	class:RTC::AimdRateControl	access:public	signature:(int start_bitrate_bps)
SsrcOveruseEstimatorMap	RemoteBitrateEstimatorSingleStream.hpp	/^  typedef std::map<uint32_t, Detector*> SsrcOveruseEstimatorMap;$/;"	t	class:RTC::RemoteBitrateEstimatorSingleStream	access:private
Ssrcs	RemoteBitrateEstimatorAbsSendTime.hpp	/^  typedef std::map<uint32_t, int64_t> Ssrcs;$/;"	t	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private
State	OveruseDetector.hpp	/^  BandwidthUsage State() const;$/;"	p	class:RTC::OveruseDetector	access:public	signature:() const
TimeToReduceFurther	AimdRateControl.hpp	/^  bool TimeToReduceFurther(int64_t time_now,$/;"	p	class:RTC::AimdRateControl	access:public	signature:(int64_t time_now, uint32_t incoming_bitrate_bps) const
TimeoutStreams	RemoteBitrateEstimatorAbsSendTime.hpp	/^  void TimeoutStreams(int64_t now_ms);$/;"	p	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private	signature:(int64_t now_ms)
TimestampGroup	InterArrival.hpp	/^    TimestampGroup()$/;"	f	struct:RTC::InterArrival::TimestampGroup	access:public	signature:()
TimestampGroup	InterArrival.hpp	/^  struct TimestampGroup {$/;"	s	class:RTC::InterArrival	access:private
Update	AimdRateControl.hpp	/^  void Update(const RateControlInput* input, int64_t now_ms);$/;"	p	class:RTC::AimdRateControl	access:public	signature:(const RateControlInput* input, int64_t now_ms)
Update	OveruseEstimator.hpp	/^  void Update(int64_t t_delta,$/;"	p	class:RTC::OveruseEstimator	access:public	signature:(int64_t t_delta, double ts_delta, int size_delta, BandwidthUsage current_hypothesis, int64_t now_ms)
UpdateBandwidthEstimate	AimdRateControl.hpp	/^  uint32_t UpdateBandwidthEstimate(int64_t now_ms);$/;"	p	class:RTC::AimdRateControl	access:public	signature:(int64_t now_ms)
UpdateChangePeriod	AimdRateControl.hpp	/^  void UpdateChangePeriod(int64_t now_ms);$/;"	p	class:RTC::AimdRateControl	access:private	signature:(int64_t now_ms)
UpdateEstimate	RemoteBitrateEstimatorSingleStream.hpp	/^  void UpdateEstimate(int64_t time_now);$/;"	p	class:RTC::RemoteBitrateEstimatorSingleStream	access:private	signature:(int64_t time_now)
UpdateMaxBitRateEstimate	AimdRateControl.hpp	/^  void UpdateMaxBitRateEstimate(float incoming_bit_rate_kbps);$/;"	p	class:RTC::AimdRateControl	access:private	signature:(float incoming_bit_rate_kbps)
UpdateMinFramePeriod	OveruseEstimator.hpp	/^  double UpdateMinFramePeriod(double ts_delta);$/;"	p	class:RTC::OveruseEstimator	access:private	signature:(double ts_delta)
UpdateNoiseEstimate	OveruseEstimator.hpp	/^  void UpdateNoiseEstimate(double residual, double ts_delta, bool stable_state);$/;"	p	class:RTC::OveruseEstimator	access:private	signature:(double residual, double ts_delta, bool stable_state)
UpdateThreshold	OveruseDetector.hpp	/^  void UpdateThreshold(double modified_offset, int64_t now_ms);$/;"	p	class:RTC::OveruseDetector	access:private	signature:(double modified_offset, int64_t now_ms)
ValidEstimate	AimdRateControl.hpp	/^  bool ValidEstimate() const;$/;"	p	class:RTC::AimdRateControl	access:public	signature:() const
avg_max_bitrate_kbps_	AimdRateControl.hpp	/^  float avg_max_bitrate_kbps_;$/;"	m	class:RTC::AimdRateControl	access:private
avg_noise_	OveruseEstimator.hpp	/^  double avg_noise_;$/;"	m	class:RTC::OveruseEstimator	access:private
beta_	AimdRateControl.hpp	/^  float beta_;$/;"	m	class:RTC::AimdRateControl	access:private
bitrate_is_initialized_	AimdRateControl.hpp	/^  bool bitrate_is_initialized_;$/;"	m	class:RTC::AimdRateControl	access:private
burst_grouping_	InterArrival.hpp	/^  bool burst_grouping_;$/;"	m	class:RTC::InterArrival	access:private
bw_state	BweDefines.hpp	/^  BandwidthUsage bw_state;$/;"	m	struct:RTC::RateControlInput	access:public
complete_time_ms	InterArrival.hpp	/^    int64_t complete_time_ms;$/;"	m	struct:RTC::InterArrival::TimestampGroup	access:public
congestion_controller	BweDefines.hpp	/^namespace congestion_controller {$/;"	n	namespace:RTC
count	RemoteBitrateEstimatorAbsSendTime.hpp	/^  int count;$/;"	m	struct:RTC::Cluster	access:public
current_bitrate_bps_	AimdRateControl.hpp	/^  uint32_t current_bitrate_bps_;$/;"	m	class:RTC::AimdRateControl	access:private
current_input_	AimdRateControl.hpp	/^  RateControlInput current_input_;$/;"	m	class:RTC::AimdRateControl	access:private
current_timestamp_group_	InterArrival.hpp	/^  TimestampGroup current_timestamp_group_;$/;"	m	class:RTC::InterArrival	access:private
detector_	RemoteBitrateEstimatorAbsSendTime.hpp	/^  OveruseDetector detector_;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private
estimator_	RemoteBitrateEstimatorAbsSendTime.hpp	/^  std::unique_ptr<OveruseEstimator> estimator_;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private
first_packet_time_ms_	RemoteBitrateEstimatorAbsSendTime.hpp	/^  int64_t first_packet_time_ms_;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private
first_timestamp	InterArrival.hpp	/^    uint32_t first_timestamp;$/;"	m	struct:RTC::InterArrival::TimestampGroup	access:public
hypothesis_	OveruseDetector.hpp	/^  BandwidthUsage hypothesis_;$/;"	m	class:RTC::OveruseDetector	access:private
in_experiment_	AimdRateControl.hpp	/^  bool in_experiment_;$/;"	m	class:RTC::AimdRateControl	access:private
in_experiment_	OveruseDetector.hpp	/^  bool in_experiment_;$/;"	m	class:RTC::OveruseDetector	access:private
incoming_bitrate	BweDefines.hpp	/^  uint32_t incoming_bitrate;$/;"	m	struct:RTC::RateControlInput	access:public
incoming_bitrate_	RemoteBitrateEstimatorAbsSendTime.hpp	/^  RateStatistics incoming_bitrate_;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private
incoming_bitrate_	RemoteBitrateEstimatorSingleStream.hpp	/^  RateStatistics incoming_bitrate_;$/;"	m	class:RTC::RemoteBitrateEstimatorSingleStream	access:private
incoming_bitrate_initialized_	RemoteBitrateEstimatorAbsSendTime.hpp	/^  bool incoming_bitrate_initialized_;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private
inter_arrival_	RemoteBitrateEstimatorAbsSendTime.hpp	/^  std::unique_ptr<InterArrival> inter_arrival_;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private
kArrivalTimeOffsetThresholdMs	InterArrival.hpp	/^  static constexpr int64_t kArrivalTimeOffsetThresholdMs = 3000;$/;"	m	class:RTC::InterArrival	access:public
kBitrateUpdated	RemoteBitrateEstimatorAbsSendTime.hpp	/^  enum class ProbeResult { kBitrateUpdated, kNoUpdate };$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime::ProbeResult	access:private
kBitrateWindowMs	BweDefines.hpp	/^static const int64_t kBitrateWindowMs = 1000;$/;"	m	namespace:RTC
kBwNormal	BweDefines.hpp	/^  kBwNormal = 0,$/;"	e	enum:RTC::BandwidthUsage
kBwOverusing	BweDefines.hpp	/^  kBwOverusing = 2,$/;"	e	enum:RTC::BandwidthUsage
kBwUnderusing	BweDefines.hpp	/^  kBwUnderusing = 1,$/;"	e	enum:RTC::BandwidthUsage
kBweNamesMax	BweDefines.hpp	/^  kBweNamesMax = 4$/;"	e	enum:RTC::BweNames
kProcessIntervalMs	RemoteBitrateEstimator.hpp	/^  static const int64_t kProcessIntervalMs = 500;$/;"	m	class:RTC::RemoteBitrateEstimator	access:protected
kRcAboveMax	BweDefines.hpp	/^enum RateControlRegion { kRcNearMax, kRcAboveMax, kRcMaxUnknown };$/;"	e	enum:RTC::RateControlRegion
kRcDecrease	BweDefines.hpp	/^enum RateControlState { kRcHold, kRcIncrease, kRcDecrease };$/;"	e	enum:RTC::RateControlState
kRcHold	BweDefines.hpp	/^enum RateControlState { kRcHold, kRcIncrease, kRcDecrease };$/;"	e	enum:RTC::RateControlState
kRcIncrease	BweDefines.hpp	/^enum RateControlState { kRcHold, kRcIncrease, kRcDecrease };$/;"	e	enum:RTC::RateControlState
kRcMaxUnknown	BweDefines.hpp	/^enum RateControlRegion { kRcNearMax, kRcAboveMax, kRcMaxUnknown };$/;"	e	enum:RTC::RateControlRegion
kRcNearMax	BweDefines.hpp	/^enum RateControlRegion { kRcNearMax, kRcAboveMax, kRcMaxUnknown };$/;"	e	enum:RTC::RateControlRegion
kReceiverAbsSendTime	BweDefines.hpp	/^  kReceiverAbsSendTime = 2,$/;"	e	enum:RTC::BweNames
kReceiverNoExtension	BweDefines.hpp	/^  kReceiverNoExtension = 0,$/;"	e	enum:RTC::BweNames
kReceiverTOffset	BweDefines.hpp	/^  kReceiverTOffset = 1,$/;"	e	enum:RTC::BweNames
kReorderedResetThreshold	InterArrival.hpp	/^  static constexpr int kReorderedResetThreshold = 3;$/;"	m	class:RTC::InterArrival	access:public
kSendSideTransportSeqNum	BweDefines.hpp	/^  kSendSideTransportSeqNum = 3,$/;"	e	enum:RTC::BweNames
kStreamTimeOutMs	RemoteBitrateEstimator.hpp	/^  static const int64_t kStreamTimeOutMs = 2000;$/;"	m	class:RTC::RemoteBitrateEstimator	access:protected
kTimestampGroupLengthTicks	InterArrival.hpp	/^  const uint32_t kTimestampGroupLengthTicks;$/;"	m	class:RTC::InterArrival	access:private
k_down_	OveruseDetector.hpp	/^  double k_down_;$/;"	m	class:RTC::OveruseDetector	access:private
k_up_	OveruseDetector.hpp	/^  double k_up_;$/;"	m	class:RTC::OveruseDetector	access:private
last_decrease_	AimdRateControl.hpp	/^  int last_decrease_;$/;"	m	class:RTC::AimdRateControl	access:private
last_process_time_	RemoteBitrateEstimatorSingleStream.hpp	/^  int64_t last_process_time_;$/;"	m	class:RTC::RemoteBitrateEstimatorSingleStream	access:private
last_system_time_ms	InterArrival.hpp	/^    int64_t last_system_time_ms;$/;"	m	struct:RTC::InterArrival::TimestampGroup	access:public
last_update_ms_	OveruseDetector.hpp	/^  int64_t last_update_ms_;$/;"	m	class:RTC::OveruseDetector	access:private
last_update_ms_	RemoteBitrateEstimatorAbsSendTime.hpp	/^  int64_t last_update_ms_;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private
last_valid_incoming_bitrate_	RemoteBitrateEstimatorSingleStream.hpp	/^  uint32_t last_valid_incoming_bitrate_;$/;"	m	class:RTC::RemoteBitrateEstimatorSingleStream	access:private
max_configured_bitrate_bps_	AimdRateControl.hpp	/^  uint32_t max_configured_bitrate_bps_;$/;"	m	class:RTC::AimdRateControl	access:private
mean_size	RemoteBitrateEstimatorAbsSendTime.hpp	/^  size_t mean_size;$/;"	m	struct:RTC::Cluster	access:public
min_configured_bitrate_bps_	AimdRateControl.hpp	/^  uint32_t min_configured_bitrate_bps_;$/;"	m	class:RTC::AimdRateControl	access:private
noise_var	BweDefines.hpp	/^  double noise_var;$/;"	m	struct:RTC::RateControlInput	access:public
num_above_min_delta	RemoteBitrateEstimatorAbsSendTime.hpp	/^  int num_above_min_delta;$/;"	m	struct:RTC::Cluster	access:public
num_consecutive_reordered_packets_	InterArrival.hpp	/^  int num_consecutive_reordered_packets_;$/;"	m	class:RTC::InterArrival	access:private
num_of_deltas	OveruseEstimator.hpp	/^  unsigned int num_of_deltas() const {$/;"	f	class:RTC::OveruseEstimator	access:public	signature:() const
num_of_deltas_	OveruseEstimator.hpp	/^  uint16_t num_of_deltas_;$/;"	m	class:RTC::OveruseEstimator	access:private
observer_	RemoteBitrateEstimatorAbsSendTime.hpp	/^  RemoteBitrateObserver* const observer_;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private
observer_	RemoteBitrateEstimatorSingleStream.hpp	/^  RemoteBitrateObserver* observer_;$/;"	m	class:RTC::RemoteBitrateEstimatorSingleStream	access:private
offset	OveruseEstimator.hpp	/^  double offset() const {$/;"	f	class:RTC::OveruseEstimator	access:public	signature:() const
offset_	OveruseEstimator.hpp	/^  double offset_;$/;"	m	class:RTC::OveruseEstimator	access:private
options_	OveruseEstimator.hpp	/^  OverUseDetectorOptions options_;$/;"	m	class:RTC::OveruseEstimator	access:private
override	RemoteBitrateEstimatorAbsSendTime.hpp	/^                      const RTPHeader& header) override;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:public
override	RemoteBitrateEstimatorAbsSendTime.hpp	/^                      uint32_t* bitrate_bps) const override;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:public
override	RemoteBitrateEstimatorAbsSendTime.hpp	/^      const std::vector<PacketInfo>& packet_feedback_vector) override;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:public
override	RemoteBitrateEstimatorAbsSendTime.hpp	/^  int64_t TimeUntilNextProcess() override;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:public
override	RemoteBitrateEstimatorAbsSendTime.hpp	/^  void OnRttUpdate(int64_t avg_rtt_ms, int64_t max_rtt_ms) override;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:public
override	RemoteBitrateEstimatorAbsSendTime.hpp	/^  void Process() override;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:public
override	RemoteBitrateEstimatorAbsSendTime.hpp	/^  void RemoveStream(uint32_t ssrc) override;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:public
override	RemoteBitrateEstimatorAbsSendTime.hpp	/^  void SetMinBitrate(int min_bitrate_bps) override;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:public
override	RemoteBitrateEstimatorSingleStream.hpp	/^                      const RTPHeader& header) override;$/;"	m	class:RTC::RemoteBitrateEstimatorSingleStream	access:public
override	RemoteBitrateEstimatorSingleStream.hpp	/^                      uint32_t* bitrate_bps) const override;$/;"	m	class:RTC::RemoteBitrateEstimatorSingleStream	access:public
override	RemoteBitrateEstimatorSingleStream.hpp	/^  int64_t TimeUntilNextProcess() override;$/;"	m	class:RTC::RemoteBitrateEstimatorSingleStream	access:public
override	RemoteBitrateEstimatorSingleStream.hpp	/^  void OnRttUpdate(int64_t avg_rtt_ms, int64_t max_rtt_ms) override;$/;"	m	class:RTC::RemoteBitrateEstimatorSingleStream	access:public
override	RemoteBitrateEstimatorSingleStream.hpp	/^  void Process() override;$/;"	m	class:RTC::RemoteBitrateEstimatorSingleStream	access:public
override	RemoteBitrateEstimatorSingleStream.hpp	/^  void RemoveStream(uint32_t ssrc) override;$/;"	m	class:RTC::RemoteBitrateEstimatorSingleStream	access:public
override	RemoteBitrateEstimatorSingleStream.hpp	/^  void SetMinBitrate(int min_bitrate_bps) override;$/;"	m	class:RTC::RemoteBitrateEstimatorSingleStream	access:public
overuse_counter_	OveruseDetector.hpp	/^  int overuse_counter_;$/;"	m	class:RTC::OveruseDetector	access:private
overuse_detectors_	RemoteBitrateEstimatorSingleStream.hpp	/^  SsrcOveruseEstimatorMap overuse_detectors_;$/;"	m	class:RTC::RemoteBitrateEstimatorSingleStream	access:private
overusing_time_threshold_	OveruseDetector.hpp	/^  double overusing_time_threshold_;$/;"	m	class:RTC::OveruseDetector	access:private
payload_size	RemoteBitrateEstimatorAbsSendTime.hpp	/^  size_t payload_size;$/;"	m	struct:RTC::Probe	access:public
prev_offset_	OveruseDetector.hpp	/^  double prev_offset_;$/;"	m	class:RTC::OveruseDetector	access:private
prev_offset_	OveruseEstimator.hpp	/^  double prev_offset_;$/;"	m	class:RTC::OveruseEstimator	access:private
prev_timestamp_group_	InterArrival.hpp	/^  TimestampGroup prev_timestamp_group_;$/;"	m	class:RTC::InterArrival	access:private
probes_	RemoteBitrateEstimatorAbsSendTime.hpp	/^  std::list<Probe> probes_;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private
process_interval_ms_	RemoteBitrateEstimatorSingleStream.hpp	/^  int64_t process_interval_ms_;$/;"	m	class:RTC::RemoteBitrateEstimatorSingleStream	access:private
process_noise_	OveruseEstimator.hpp	/^  double process_noise_[2];$/;"	m	class:RTC::OveruseEstimator	access:private
rate_control_region_	AimdRateControl.hpp	/^  RateControlRegion rate_control_region_;$/;"	m	class:RTC::AimdRateControl	access:private
rate_control_state_	AimdRateControl.hpp	/^  RateControlState rate_control_state_;$/;"	m	class:RTC::AimdRateControl	access:private
recent_propagation_delta_ms_	RemoteBitrateEstimatorAbsSendTime.hpp	/^  std::vector<int> recent_propagation_delta_ms_;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private
recent_update_time_ms_	RemoteBitrateEstimatorAbsSendTime.hpp	/^  std::vector<int64_t> recent_update_time_ms_;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private
recv_mean_ms	RemoteBitrateEstimatorAbsSendTime.hpp	/^  float recv_mean_ms;$/;"	m	struct:RTC::Cluster	access:public
recv_time_ms	RemoteBitrateEstimatorAbsSendTime.hpp	/^  int64_t recv_time_ms;$/;"	m	struct:RTC::Probe	access:public
remote_rate_	RemoteBitrateEstimatorAbsSendTime.hpp	/^  AimdRateControl remote_rate_;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private
remote_rate_	RemoteBitrateEstimatorSingleStream.hpp	/^  std::unique_ptr<AimdRateControl> remote_rate_;$/;"	m	class:RTC::RemoteBitrateEstimatorSingleStream	access:private
rtt_	AimdRateControl.hpp	/^  int64_t rtt_;$/;"	m	class:RTC::AimdRateControl	access:private
send_mean_ms	RemoteBitrateEstimatorAbsSendTime.hpp	/^  float send_mean_ms;$/;"	m	struct:RTC::Cluster	access:public
send_time_ms	RemoteBitrateEstimatorAbsSendTime.hpp	/^  int64_t send_time_ms;$/;"	m	struct:RTC::Probe	access:public
size	InterArrival.hpp	/^    size_t size;$/;"	m	struct:RTC::InterArrival::TimestampGroup	access:public
slope_	OveruseEstimator.hpp	/^  double slope_;$/;"	m	class:RTC::OveruseEstimator	access:private
ssrcs_	RemoteBitrateEstimatorAbsSendTime.hpp	/^  Ssrcs ssrcs_;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private
threshold_	OveruseDetector.hpp	/^  double threshold_;$/;"	m	class:RTC::OveruseDetector	access:private
time_first_incoming_estimate_	AimdRateControl.hpp	/^  int64_t time_first_incoming_estimate_;$/;"	m	class:RTC::AimdRateControl	access:private
time_last_bitrate_change_	AimdRateControl.hpp	/^  int64_t time_last_bitrate_change_;$/;"	m	class:RTC::AimdRateControl	access:private
time_over_using_	OveruseDetector.hpp	/^  double time_over_using_;$/;"	m	class:RTC::OveruseDetector	access:private
timestamp	InterArrival.hpp	/^    uint32_t timestamp;$/;"	m	struct:RTC::InterArrival::TimestampGroup	access:public
timestamp_to_ms_coeff_	InterArrival.hpp	/^  double timestamp_to_ms_coeff_;$/;"	m	class:RTC::InterArrival	access:private
total_probes_received_	RemoteBitrateEstimatorAbsSendTime.hpp	/^  size_t total_probes_received_;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private
ts_delta_hist_	OveruseEstimator.hpp	/^  std::deque<double> ts_delta_hist_;$/;"	m	class:RTC::OveruseEstimator	access:private
uma_recorded_	RemoteBitrateEstimatorAbsSendTime.hpp	/^  bool uma_recorded_;$/;"	m	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:private
uma_recorded_	RemoteBitrateEstimatorSingleStream.hpp	/^  bool uma_recorded_;$/;"	m	class:RTC::RemoteBitrateEstimatorSingleStream	access:private
updated_	AimdRateControl.hpp	/^  bool updated_;$/;"	m	class:RTC::AimdRateControl	access:private
var_max_bitrate_kbps_	AimdRateControl.hpp	/^  float var_max_bitrate_kbps_;$/;"	m	class:RTC::AimdRateControl	access:private
var_noise	OveruseEstimator.hpp	/^  double var_noise() const {$/;"	f	class:RTC::OveruseEstimator	access:public	signature:() const
var_noise_	OveruseEstimator.hpp	/^  double var_noise_;$/;"	m	class:RTC::OveruseEstimator	access:private
~AimdRateControl	AimdRateControl.hpp	/^  virtual ~AimdRateControl();$/;"	p	class:RTC::AimdRateControl	access:public	signature:()
~OveruseDetector	OveruseDetector.hpp	/^  virtual ~OveruseDetector();$/;"	p	class:RTC::OveruseDetector	access:public	signature:()
~OveruseEstimator	OveruseEstimator.hpp	/^  ~OveruseEstimator();$/;"	p	class:RTC::OveruseEstimator	access:public	signature:()
~RemoteBitrateEstimator	RemoteBitrateEstimator.hpp	/^  virtual ~RemoteBitrateEstimator() {}$/;"	f	class:RTC::RemoteBitrateEstimator	access:public	signature:()
~RemoteBitrateEstimatorAbsSendTime	RemoteBitrateEstimatorAbsSendTime.hpp	/^  virtual ~RemoteBitrateEstimatorAbsSendTime() {}$/;"	f	class:RTC::RemoteBitrateEstimatorAbsSendTime	access:public	signature:()
~RemoteBitrateEstimatorSingleStream	RemoteBitrateEstimatorSingleStream.hpp	/^  virtual ~RemoteBitrateEstimatorSingleStream();$/;"	p	class:RTC::RemoteBitrateEstimatorSingleStream	access:public	signature:()
~RemoteBitrateObserver	RemoteBitrateEstimator.hpp	/^  virtual ~RemoteBitrateObserver() {}$/;"	f	class:RTC::RemoteBitrateObserver	access:public	signature:()
