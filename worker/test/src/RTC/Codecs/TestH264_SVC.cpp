#include "common.hpp"
#include "RTC/Codecs/H264_SVC.hpp"
#include <catch2/catch.hpp>
#include <cstring> // std::memcmp()

using namespace RTC;

SCENARIO("parse H264_SVC payload descriptor", "[codecs][h264_svc]")
{
	SECTION("parse payload descriptor")
	{
		// clang-format off
		uint8_t originalBuffer[] =
		{
			//0x0e, 0x80, 0x11, 0x00
			// 0x0e, 0xc0, 0x90, 0x20
			//0x14, 0xc0, 0x90, 0x20
			0x78,0x00,0x0A,0x67,0x42,0xC0,0x33,0x8D,0x61,0x10,0x50,0x7E,0x40,0x00,0x06,0x68,0xCE,0x01,0xA8,0x35,0xC8
			//0x7C,0x85,0xB8,0x00,0x04,0x02,0xD2,0x08,0x60,0x3A,0x83,0x06,0x4C,0xFF,0xF7,0xBC,0x7E,0x03,0x85,0xD8,0x02
		};
		// clang-format on

		// Keep a copy of the original buffer for comparing.
		uint8_t buffer[21] = { 0 };

		std::memcpy(buffer, originalBuffer, sizeof(buffer));

		const auto* payloadDescriptor = Codecs::H264_SVC::Parse(buffer, sizeof(buffer));

		REQUIRE(payloadDescriptor);

		payloadDescriptor->Dump();

		delete payloadDescriptor;
	}

}
